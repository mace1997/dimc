// Generated by stratus_hls 23.01-s004  (99406.080430)
// Sun Sep  1 14:26:07 2024
// from snax_req_handler.cc

`timescale 1ps / 1ps


module snax_req_handler( clk, rst, snax_acc_req_valid, snax_acc_req_data_addr, snax_acc_req_data_wen, snax_acc_req_data_data, snax_acc_req_ready, acc_snax_rsp_valid, acc_snax_rsp_data_data, acc_snax_rsp_data_addr, acc_snax_rsp_ready, alpha_QKV_out_valid, alpha_QKV_out_data, alpha_QKV_out_ready, alpha_QKT_out_valid, alpha_QKT_out_data, alpha_QKT_out_ready, alpha_CONV_out_QKT_valid, alpha_CONV_out_QKT_data, alpha_CONV_out_QKT_ready, alpha_CONV_out_QKV_valid, alpha_CONV_out_QKV_data
      , alpha_CONV_out_QKV_ready, trig_hub_streamer_handler_master_data_in_0, trig_hub_streamer_handler_master_data_in_1, trig_hub_streamer_handler_master_data_in_2, trig_hub_streamer_handler_master_data_in_3, trig_hub_streamer_handler_master_in_cur_write, trig_hub_streamer_handler_master_out_cur_write, trig_hub_qkv_handler_master_data_in_0, trig_hub_qkv_handler_master_data_in_1, trig_hub_qkv_handler_master_data_in_2, trig_hub_qkv_handler_master_data_in_3, trig_hub_qkv_handler_master_data_in_4
      , trig_hub_qkv_handler_master_in_cur_write, trig_hub_qkv_handler_master_out_cur_write, trig_hub_qkt_handler_master_data_in_0, trig_hub_qkt_handler_master_data_in_1, trig_hub_qkt_handler_master_data_in_2, trig_hub_qkt_handler_master_data_in_3, trig_hub_qkt_handler_master_data_in_4, trig_hub_qkt_handler_master_in_cur_write, trig_hub_qkt_handler_master_out_cur_write );

    input clk;
    input rst;
    input snax_acc_req_valid;
    input [31:0] snax_acc_req_data_addr;
    input snax_acc_req_data_wen;
    input [31:0] snax_acc_req_data_data;
    input acc_snax_rsp_ready;
    input alpha_QKV_out_ready;
    input alpha_QKT_out_ready;
    input alpha_CONV_out_QKT_ready;
    input alpha_CONV_out_QKV_ready;
    input trig_hub_streamer_handler_master_out_cur_write;
    input trig_hub_qkv_handler_master_out_cur_write;
    input trig_hub_qkt_handler_master_out_cur_write;
    output snax_acc_req_ready;
    reg snax_acc_req_ready;
    output acc_snax_rsp_valid;
    reg acc_snax_rsp_valid;
    output [31:0] acc_snax_rsp_data_data;
    output [31:0] acc_snax_rsp_data_addr;
    reg [31:0] acc_snax_rsp_data_addr;
    output alpha_QKV_out_valid;
    reg alpha_QKV_out_valid;
    output [31:0] alpha_QKV_out_data;
    reg [31:0] alpha_QKV_out_data;
    output alpha_QKT_out_valid;
    reg alpha_QKT_out_valid;
    output [31:0] alpha_QKT_out_data;
    reg [31:0] alpha_QKT_out_data;
    output alpha_CONV_out_QKT_valid;
    reg alpha_CONV_out_QKT_valid;
    output [31:0] alpha_CONV_out_QKT_data;
    reg [31:0] alpha_CONV_out_QKT_data;
    output alpha_CONV_out_QKV_valid;
    reg alpha_CONV_out_QKV_valid;
    output [31:0] alpha_CONV_out_QKV_data;
    reg [31:0] alpha_CONV_out_QKV_data;
    output trig_hub_streamer_handler_master_data_in_0;
    reg trig_hub_streamer_handler_master_data_in_0;
    output trig_hub_streamer_handler_master_data_in_1;
    reg trig_hub_streamer_handler_master_data_in_1;
    output trig_hub_streamer_handler_master_data_in_2;
    reg trig_hub_streamer_handler_master_data_in_2;
    output trig_hub_streamer_handler_master_data_in_3;
    reg trig_hub_streamer_handler_master_data_in_3;
    output trig_hub_streamer_handler_master_in_cur_write;
    reg trig_hub_streamer_handler_master_in_cur_write;
    output trig_hub_qkv_handler_master_data_in_0;
    output trig_hub_qkv_handler_master_data_in_1;
    output trig_hub_qkv_handler_master_data_in_2;
    output trig_hub_qkv_handler_master_data_in_3;
    reg trig_hub_qkv_handler_master_data_in_3;
    output trig_hub_qkv_handler_master_data_in_4;
    reg trig_hub_qkv_handler_master_data_in_4;
    output trig_hub_qkv_handler_master_in_cur_write;
    reg trig_hub_qkv_handler_master_in_cur_write;
    output trig_hub_qkt_handler_master_data_in_0;
    reg trig_hub_qkt_handler_master_data_in_0;
    output trig_hub_qkt_handler_master_data_in_1;
    reg trig_hub_qkt_handler_master_data_in_1;
    output trig_hub_qkt_handler_master_data_in_2;
    reg trig_hub_qkt_handler_master_data_in_2;
    output trig_hub_qkt_handler_master_data_in_3;
    reg trig_hub_qkt_handler_master_data_in_3;
    output trig_hub_qkt_handler_master_data_in_4;
    reg trig_hub_qkt_handler_master_data_in_4;
    output trig_hub_qkt_handler_master_in_cur_write;
    reg trig_hub_qkt_handler_master_in_cur_write;
    reg [4:0] global_state_next;
    wire  snax_req_handler_Xor_1Ux1U_1U_4_44_out1;
    wire  snax_req_handler_Xor_1Ux1U_1U_4_42_out1;
    wire  snax_req_handler_Xor_1Ux1U_1U_4_38_out1;
    wire  snax_req_handler_Or_1Ux1U_1U_4_3_out1;
    wire  snax_req_handler_Or_1Ux1U_1U_4_2_out1;
    wire  snax_req_handler_Equal_1U_3_4_1_out1;
    wire  snax_req_handler_Not_1U_1U_s_4_39_out1;
    wire  snax_req_handler_Not_1U_1U_s_4_45_out1;
    wire  snax_req_handler_Not_1U_1U_s_4_43_out1;
    wire  snax_req_handler_NotEQ_1U_12_4_13_out1;
    wire  snax_req_handler_NotEQ_1U_5_4_9_out1;
    reg  streamer_busy;
    reg  qkv_busy;
    reg  trig_hub_qkt_handler_master_out_last_read;
    reg  trig_hub_qkv_handler_master_out_last_read;
    reg  trig_hub_streamer_handler_master_out_last_read;
    reg  snax_req_handler_N_Mux_1_2_2_4_4_out1;
    reg  acc_snax_rsp_data_data_slice;
    wire  snax_req_handler_Equal_1U_10_4_6_out1;
    wire  snax_req_handler_Equal_1U_1_4_15_out1;
    reg [31:0] s_reg_14;
    wire  snax_req_handler_Equal_1U_0_4_16_out1;
    reg [4:0] global_state;
    reg  trig_hub_streamer_handler_master_in_cur_write_reg;
    reg  trig_hub_qkv_handler_master_in_cur_write_reg;
    reg  snax_req_handler_N_Mux_1_3_14_4_8_out1;
    wire  snax_req_handler_Equal_1U_8_4_23_out1;
    reg  trig_hub_qkt_handler_master_in_cur_write_reg;
    reg  snax_req_handler_N_Mux_1_3_15_4_12_out1;
    reg  snax_req_handler_N_Muxb_1_4_13_4_5_out1;
    reg  gs_ctrl_f_snax_req_handler_h4;
    wire  snax_req_handler_Not_1U_1U_s_4_70_out1;
    reg  snax_req_handler_N_Mux_1_2_4_4_71_out1;
    reg  trig_hub_qkt_handler_master_in_next_write;
    wire  snax_req_handler_Not_1U_1U_s_4_68_out1;
    reg  snax_req_handler_N_Mux_1_2_4_4_69_out1;
    reg  trig_hub_qkv_handler_master_in_next_write;
    reg  stall0;
    wire  snax_req_handler_Not_1U_1U_s_4_66_out1;
    reg  snax_req_handler_N_Mux_1_2_4_4_67_out1;
    reg  trig_hub_streamer_handler_master_in_next_write;

    
    // rtl_process:snax_req_handler/drive_trig_hub_streamer_handler_master_in_next_write
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_streamer_handler_master_in_next_write
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:37
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:862:9
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:855:10
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:868:11
    
    always @(posedge clk)
      begin : drive_trig_hub_streamer_handler_master_in_next_write
        if (rst == 1'b0) 
          begin
            // op:trig_hub_streamer_handler_master_gen_in_next_write_1/OP367
            // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:862:9
            // Call Stack: 
            // in function gen_in_next_write_1 called from trig_done_lib/c_parts/trig_hub_streamer_handler.h:862:9
            trig_hub_streamer_handler_master_in_next_write <= 1'b1;
          end 
        else 
          begin
            // op:trig_hub_streamer_handler_master_gen_in_next_write_1/OP374
            // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:868:11
            // Call Stack: 
            // in function gen_in_next_write_1 called from trig_done_lib/c_parts/trig_hub_streamer_handler.h:868:11
            trig_hub_streamer_handler_master_in_next_write <= snax_req_handler_N_Mux_1_2_4_4_67_out1;
          end
      end
    
    // rtl_instance:snax_req_handler/snax_req_handler_Not_1U_1U_s_4_66
    // Resource=snax_req_handler_Not_1U_1U_s_4, Function=not : Inputs=1 Outputs=1
    // Implements 1 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:868:27
    assign snax_req_handler_Not_1U_1U_s_4_66_out1 = !trig_hub_streamer_handler_master_in_cur_write;
    
    // rtl_instance:snax_req_handler/snax_req_handler_N_Mux_1_2_4_4_67
    // Resource=snax_req_handler_N_Mux_1_2_4_4, Function=mux : Inputs=1,1,1 Outputs=1
    // Implements 1 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:867:9
    always @*
      begin : snax_req_handler_N_Mux_1_2_4_4_67
        if (stall0) 
          begin
            snax_req_handler_N_Mux_1_2_4_4_67_out1 = trig_hub_streamer_handler_master_in_next_write;
          end 
        else 
          begin
            snax_req_handler_N_Mux_1_2_4_4_67_out1 = snax_req_handler_Not_1U_1U_s_4_66_out1;
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkv_handler_master_in_next_write
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkv_handler_master_in_next_write
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:37
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:870:9
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:863:10
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:876:11
    
    always @(posedge clk)
      begin : drive_trig_hub_qkv_handler_master_in_next_write
        if (rst == 1'b0) 
          begin
            // op:trig_hub_qkv_handler_master_gen_in_next_write_1/OP379
            // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:870:9
            // Call Stack: 
            // in function gen_in_next_write_1 called from trig_done_lib/c_parts/trig_hub_qkv_handler.h:870:9
            trig_hub_qkv_handler_master_in_next_write <= 1'b1;
          end 
        else 
          begin
            // op:trig_hub_qkv_handler_master_gen_in_next_write_1/OP386
            // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:876:11
            // Call Stack: 
            // in function gen_in_next_write_1 called from trig_done_lib/c_parts/trig_hub_qkv_handler.h:876:11
            trig_hub_qkv_handler_master_in_next_write <= snax_req_handler_N_Mux_1_2_4_4_69_out1;
          end
      end
    
    // rtl_instance:snax_req_handler/snax_req_handler_Not_1U_1U_s_4_68
    // Resource=snax_req_handler_Not_1U_1U_s_4, Function=not : Inputs=1 Outputs=1
    // Implements 1 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:876:27
    assign snax_req_handler_Not_1U_1U_s_4_68_out1 = !trig_hub_qkv_handler_master_in_cur_write;
    
    // rtl_instance:snax_req_handler/snax_req_handler_N_Mux_1_2_4_4_69
    // Resource=snax_req_handler_N_Mux_1_2_4_4, Function=mux : Inputs=1,1,1 Outputs=1
    // Implements 1 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:875:9
    always @*
      begin : snax_req_handler_N_Mux_1_2_4_4_69
        if (stall0) 
          begin
            snax_req_handler_N_Mux_1_2_4_4_69_out1 = trig_hub_qkv_handler_master_in_next_write;
          end 
        else 
          begin
            snax_req_handler_N_Mux_1_2_4_4_69_out1 = snax_req_handler_Not_1U_1U_s_4_68_out1;
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkt_handler_master_in_next_write
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkt_handler_master_in_next_write
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:934:37
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:870:9
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:863:10
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:876:11
    
    always @(posedge clk)
      begin : drive_trig_hub_qkt_handler_master_in_next_write
        if (rst == 1'b0) 
          begin
            // op:trig_hub_qkt_handler_master_gen_in_next_write_1/OP391
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:870:9
            // Call Stack: 
            // in function gen_in_next_write_1 called from trig_done_lib/c_parts/trig_hub_qkt_handler.h:870:9
            trig_hub_qkt_handler_master_in_next_write <= 1'b1;
          end 
        else 
          begin
            // op:trig_hub_qkt_handler_master_gen_in_next_write_1/OP398
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:876:11
            // Call Stack: 
            // in function gen_in_next_write_1 called from trig_done_lib/c_parts/trig_hub_qkt_handler.h:876:11
            trig_hub_qkt_handler_master_in_next_write <= snax_req_handler_N_Mux_1_2_4_4_71_out1;
          end
      end
    
    // rtl_instance:snax_req_handler/snax_req_handler_Not_1U_1U_s_4_70
    // Resource=snax_req_handler_Not_1U_1U_s_4, Function=not : Inputs=1 Outputs=1
    // Implements 1 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:876:27
    assign snax_req_handler_Not_1U_1U_s_4_70_out1 = !trig_hub_qkt_handler_master_in_cur_write;
    
    // rtl_instance:snax_req_handler/snax_req_handler_N_Mux_1_2_4_4_71
    // Resource=snax_req_handler_N_Mux_1_2_4_4, Function=mux : Inputs=1,1,1 Outputs=1
    // Implements 1 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:875:9
    always @*
      begin : snax_req_handler_N_Mux_1_2_4_4_71
        if (stall0) 
          begin
            snax_req_handler_N_Mux_1_2_4_4_71_out1 = trig_hub_qkt_handler_master_in_next_write;
          end 
        else 
          begin
            snax_req_handler_N_Mux_1_2_4_4_71_out1 = snax_req_handler_Not_1U_1U_s_4_70_out1;
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkt_handler_master_in_cur_write
    // Sharing or Control mux
    // Sharing/Controlling 15 operation(s) on drive_trig_hub_qkt_handler_master_in_cur_write
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:912:2
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:934:15
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:934:2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:912:2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:15
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:903:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:15
    always @*
      begin : drive_trig_hub_qkt_handler_master_in_cur_write
        if (gs_ctrl_f_snax_req_handler_h4) 
          begin
            if (acc_snax_rsp_ready) 
              begin
                if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
                  begin
                    if (snax_req_handler_N_Mux_1_3_15_4_12_out1) 
                      begin
                        // op:f_snax_req_handler/OP233
                        // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:934:15
                        // Call Stack: 
                        // in function trig called from snax_req_handler.cc:39:41
                        // in function trig called from snax_req_handler.cc:28:41
                        // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                        trig_hub_qkt_handler_master_in_cur_write = trig_hub_qkt_handler_master_in_next_write;
                      end 
                    else 
                      begin
                        trig_hub_qkt_handler_master_in_cur_write = trig_hub_qkt_handler_master_in_cur_write_reg;
                      end
                  end 
                else 
                  begin
                    case (acc_snax_rsp_data_addr) 
                      32'd0000000001, 32'd0000000004: 
                        begin
                          trig_hub_qkt_handler_master_in_cur_write = trig_hub_qkt_handler_master_in_cur_write_reg;
                        end
                      32'd0000000002, 32'd0000000003: 
                        begin
                          // op:f_snax_req_handler/OP131
                          // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:934:2
                          // Call Stack: 
                          // in function trig called from snax_req_handler.cc:112:37
                          // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                          trig_hub_qkt_handler_master_in_cur_write = trig_hub_qkt_handler_master_in_next_write;
                        end
                      default: 
                        begin
                          if (snax_req_handler_Equal_1U_8_4_23_out1) 
                            begin
                              // op:f_snax_req_handler/OP94
                              // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:934:15
                              // Call Stack: 
                              // in function trig called from snax_req_handler.cc:148:37
                              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                              trig_hub_qkt_handler_master_in_cur_write = trig_hub_qkt_handler_master_in_next_write;
                            end 
                          else 
                            begin
                              trig_hub_qkt_handler_master_in_cur_write = trig_hub_qkt_handler_master_in_cur_write_reg;
                            end
                        end
                    endcase
                  end
              end 
            else 
              begin
                trig_hub_qkt_handler_master_in_cur_write = trig_hub_qkt_handler_master_in_cur_write_reg;
              end
          end 
        else 
          begin
            trig_hub_qkt_handler_master_in_cur_write = trig_hub_qkt_handler_master_in_cur_write_reg;
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkv_handler_master_in_cur_write
    // Sharing or Control mux
    // Sharing/Controlling 5 operation(s) on drive_trig_hub_qkv_handler_master_in_cur_write
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:912:2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:15
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:2
    always @*
      begin : drive_trig_hub_qkv_handler_master_in_cur_write
        if (gs_ctrl_f_snax_req_handler_h4) 
          begin
            if (acc_snax_rsp_ready) 
              begin
                if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
                  begin
                    if (snax_req_handler_N_Mux_1_3_14_4_8_out1) 
                      begin
                        // op:f_snax_req_handler/OP220
                        // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:15
                        // Call Stack: 
                        // in function trig called from snax_req_handler.cc:37:41
                        // in function trig called from snax_req_handler.cc:19:41
                        // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                        trig_hub_qkv_handler_master_in_cur_write = trig_hub_qkv_handler_master_in_next_write;
                      end 
                    else 
                      begin
                        trig_hub_qkv_handler_master_in_cur_write = trig_hub_qkv_handler_master_in_cur_write_reg;
                      end
                  end 
                else 
                  begin
                    case (acc_snax_rsp_data_addr) 
                      32'd0000000001, 32'd0000000004: 
                        begin
                          trig_hub_qkv_handler_master_in_cur_write = trig_hub_qkv_handler_master_in_cur_write_reg;
                        end
                      32'd0000000002, 32'd0000000003: 
                        begin
                          // op:f_snax_req_handler/OP125
                          // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:2
                          // Call Stack: 
                          // in function trig called from snax_req_handler.cc:109:37
                          // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                          trig_hub_qkv_handler_master_in_cur_write = trig_hub_qkv_handler_master_in_next_write;
                        end
                      default: 
                        begin
                          if (snax_req_handler_Equal_1U_8_4_23_out1) 
                            begin
                              // op:f_snax_req_handler/OP82
                              // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:15
                              // Call Stack: 
                              // in function trig called from snax_req_handler.cc:145:37
                              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                              trig_hub_qkv_handler_master_in_cur_write = trig_hub_qkv_handler_master_in_next_write;
                            end 
                          else 
                            begin
                              trig_hub_qkv_handler_master_in_cur_write = trig_hub_qkv_handler_master_in_cur_write_reg;
                            end
                        end
                    endcase
                  end
              end 
            else 
              begin
                trig_hub_qkv_handler_master_in_cur_write = trig_hub_qkv_handler_master_in_cur_write_reg;
              end
          end 
        else 
          begin
            trig_hub_qkv_handler_master_in_cur_write = trig_hub_qkv_handler_master_in_cur_write_reg;
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_streamer_handler_master_in_cur_write
    // Sharing or Control mux
    // Sharing/Controlling 5 operation(s) on drive_trig_hub_streamer_handler_master_in_cur_write
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:903:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:15
    always @*
      begin : drive_trig_hub_streamer_handler_master_in_cur_write
        if (gs_ctrl_f_snax_req_handler_h4) 
          begin
            if (acc_snax_rsp_ready && !snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
              begin
                case (acc_snax_rsp_data_addr) 
                  32'd0000000001: 
                    begin
                      trig_hub_streamer_handler_master_in_cur_write = trig_hub_streamer_handler_master_in_cur_write_reg;
                    end
                  32'd0000000002, 32'd0000000003, 32'd0000000004: 
                    begin
                      // op:f_snax_req_handler/OP163
                      // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:2
                      // Call Stack: 
                      // in function trig called from snax_req_handler.cc:93:42
                      // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                      trig_hub_streamer_handler_master_in_cur_write = trig_hub_streamer_handler_master_in_next_write;
                    end
                  default: 
                    begin
                      if (snax_req_handler_Equal_1U_8_4_23_out1) 
                        begin
                          // op:f_snax_req_handler/OP70
                          // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:15
                          // Call Stack: 
                          // in function trig called from snax_req_handler.cc:142:42
                          // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                          trig_hub_streamer_handler_master_in_cur_write = trig_hub_streamer_handler_master_in_next_write;
                        end 
                      else 
                        begin
                          trig_hub_streamer_handler_master_in_cur_write = trig_hub_streamer_handler_master_in_cur_write_reg;
                        end
                    end
                endcase
              end 
            else 
              begin
                trig_hub_streamer_handler_master_in_cur_write = trig_hub_streamer_handler_master_in_cur_write_reg;
              end
          end 
        else 
          begin
            trig_hub_streamer_handler_master_in_cur_write = trig_hub_streamer_handler_master_in_cur_write_reg;
          end
      end
    
    // rtl_process:snax_req_handler/drive_alpha_CONV_out_QKV_data
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_alpha_CONV_out_QKV_data
    // at: cynw_blocking_put.h:269:21
    
    always @(posedge clk)
      begin : drive_alpha_CONV_out_QKV_data
        if (rst == 1'b0) 
          begin
            alpha_CONV_out_QKV_data <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd02: 
                      begin
                        if (acc_snax_rsp_ready && (snax_req_handler_N_Muxb_1_4_13_4_5_out1 && snax_req_handler_Equal_1U_0_4_16_out1)) 
                          begin
                            // op:f_snax_req_handler/OP239
                            // at: cynw_blocking_put.h:269:21
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:41:32
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_CONV_out_QKV_data <= s_reg_14;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_alpha_CONV_out_QKV_valid
    // Sharing or Control mux
    // Sharing/Controlling 3 operation(s) on drive_alpha_CONV_out_QKV_valid
    // at: cynw_blocking_put.h:290:16
    // at: cynw_blocking_put.h:270:22
    // at: cynw_blocking_put.h:273:16
    
    always @(posedge clk)
      begin : drive_alpha_CONV_out_QKV_valid
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP10
            // at: cynw_blocking_put.h:290:16
            // Call Stack: 
            // in function reset_put called from snax_req_handler.cc:196:28
            alpha_CONV_out_QKV_valid <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd02: 
                      begin
                        if (acc_snax_rsp_ready && (snax_req_handler_N_Muxb_1_4_13_4_5_out1 && snax_req_handler_Equal_1U_0_4_16_out1)) 
                          begin
                            // op:f_snax_req_handler/OP241
                            // at: cynw_blocking_put.h:270:22
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:41:32
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_CONV_out_QKV_valid <= 1'd1;
                          end 
                      end
                    5'd17: 
                      begin
                        if (alpha_CONV_out_QKV_ready) 
                          begin
                            // op:f_snax_req_handler/OP245
                            // at: cynw_blocking_put.h:273:16
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:41:32
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_CONV_out_QKV_valid <= 1'd0;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_alpha_CONV_out_QKT_data
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_alpha_CONV_out_QKT_data
    // at: cynw_blocking_put.h:269:16
    
    always @(posedge clk)
      begin : drive_alpha_CONV_out_QKT_data
        if (rst == 1'b0) 
          begin
            alpha_CONV_out_QKT_data <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd17: 
                      begin
                        if (alpha_CONV_out_QKV_ready) 
                          begin
                            // op:f_snax_req_handler/OP246
                            // at: cynw_blocking_put.h:269:16
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:42:32
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_CONV_out_QKT_data <= s_reg_14;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_alpha_CONV_out_QKT_valid
    // Sharing or Control mux
    // Sharing/Controlling 3 operation(s) on drive_alpha_CONV_out_QKT_valid
    // at: cynw_blocking_put.h:290:16
    // at: cynw_blocking_put.h:270:16
    // at: cynw_blocking_put.h:273:16
    
    always @(posedge clk)
      begin : drive_alpha_CONV_out_QKT_valid
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP11
            // at: cynw_blocking_put.h:290:16
            // Call Stack: 
            // in function reset_put called from snax_req_handler.cc:197:28
            alpha_CONV_out_QKT_valid <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd17: 
                      begin
                        if (alpha_CONV_out_QKV_ready) 
                          begin
                            // op:f_snax_req_handler/OP247
                            // at: cynw_blocking_put.h:270:16
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:42:32
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_CONV_out_QKT_valid <= 1'd1;
                          end 
                      end
                    5'd18: 
                      begin
                        if (alpha_CONV_out_QKT_ready) 
                          begin
                            // op:f_snax_req_handler/OP250
                            // at: cynw_blocking_put.h:273:16
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:42:32
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_CONV_out_QKT_valid <= 1'd0;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_alpha_QKT_out_data
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_alpha_QKT_out_data
    // at: cynw_blocking_put.h:269:21
    
    always @(posedge clk)
      begin : drive_alpha_QKT_out_data
        if (rst == 1'b0) 
          begin
            alpha_QKT_out_data <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd02: 
                      begin
                        if (acc_snax_rsp_ready && (snax_req_handler_N_Muxb_1_4_13_4_5_out1 && snax_req_handler_Equal_1U_1_4_15_out1)) 
                          begin
                            // op:f_snax_req_handler/OP235
                            // at: cynw_blocking_put.h:269:21
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:29:27
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_QKT_out_data <= s_reg_14;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_alpha_QKT_out_valid
    // Sharing or Control mux
    // Sharing/Controlling 3 operation(s) on drive_alpha_QKT_out_valid
    // at: cynw_blocking_put.h:290:16
    // at: cynw_blocking_put.h:270:22
    // at: cynw_blocking_put.h:273:16
    
    always @(posedge clk)
      begin : drive_alpha_QKT_out_valid
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP9
            // at: cynw_blocking_put.h:290:16
            // Call Stack: 
            // in function reset_put called from snax_req_handler.cc:195:23
            alpha_QKT_out_valid <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd02: 
                      begin
                        if (acc_snax_rsp_ready && (snax_req_handler_N_Muxb_1_4_13_4_5_out1 && snax_req_handler_Equal_1U_1_4_15_out1)) 
                          begin
                            // op:f_snax_req_handler/OP237
                            // at: cynw_blocking_put.h:270:22
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:29:27
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_QKT_out_valid <= 1'd1;
                          end 
                      end
                    5'd22: 
                      begin
                        if (alpha_QKT_out_ready) 
                          begin
                            // op:f_snax_req_handler/OP265
                            // at: cynw_blocking_put.h:273:16
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:29:27
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_QKT_out_valid <= 1'd0;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_alpha_QKV_out_data
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_alpha_QKV_out_data
    // at: cynw_blocking_put.h:269:21
    
    always @(posedge clk)
      begin : drive_alpha_QKV_out_data
        if (rst == 1'b0) 
          begin
            alpha_QKV_out_data <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd02: 
                      begin
                        if (acc_snax_rsp_ready && (snax_req_handler_N_Muxb_1_4_13_4_5_out1 && snax_req_handler_Equal_1U_10_4_6_out1)) 
                          begin
                            // op:f_snax_req_handler/OP222
                            // at: cynw_blocking_put.h:269:21
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:20:27
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_QKV_out_data <= s_reg_14;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_alpha_QKV_out_valid
    // Sharing or Control mux
    // Sharing/Controlling 3 operation(s) on drive_alpha_QKV_out_valid
    // at: cynw_blocking_put.h:290:16
    // at: cynw_blocking_put.h:270:22
    // at: cynw_blocking_put.h:273:16
    
    always @(posedge clk)
      begin : drive_alpha_QKV_out_valid
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP8
            // at: cynw_blocking_put.h:290:16
            // Call Stack: 
            // in function reset_put called from snax_req_handler.cc:194:23
            alpha_QKV_out_valid <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd02: 
                      begin
                        if (acc_snax_rsp_ready && (snax_req_handler_N_Muxb_1_4_13_4_5_out1 && snax_req_handler_Equal_1U_10_4_6_out1)) 
                          begin
                            // op:f_snax_req_handler/OP224
                            // at: cynw_blocking_put.h:270:22
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:20:27
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_QKV_out_valid <= 1'd1;
                          end 
                      end
                    5'd25: 
                      begin
                        if (alpha_QKV_out_ready) 
                          begin
                            // op:f_snax_req_handler/OP274
                            // at: cynw_blocking_put.h:273:16
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:20:27
                            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                            alpha_QKV_out_valid <= 1'd0;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_acc_snax_rsp_data_addr
    // Sharing or Control mux
    // Sharing/Controlling 2 operation(s) on drive_acc_snax_rsp_data_addr
    // at: cynw_blocking_put.h:269:21
    // at: defines.h:92:22
    
    always @(posedge clk)
      begin : drive_acc_snax_rsp_data_addr
        if (rst == 1'b0) 
          begin
            acc_snax_rsp_data_addr <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd01: 
                      begin
                        if (snax_acc_req_valid) 
                          begin
                            // op:f_snax_req_handler/OP36
                            // at: cynw_blocking_put.h:269:21
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:184:18
                            // in function send_rsp called from snax_req_handler.cc:215:9
                            acc_snax_rsp_data_addr <= snax_acc_req_data_addr;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_acc_snax_rsp_data_data_slice
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_acc_snax_rsp_data_data_slice
    // at: cynw_blocking_put.h:269:21
    
    always @(posedge clk)
      begin : drive_acc_snax_rsp_data_data_slice
        if (rst == 1'b0) 
          begin
            acc_snax_rsp_data_data_slice <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd01: 
                      begin
                        if (snax_acc_req_valid) 
                          begin
                            // op:f_snax_req_handler/OP41
                            // at: cynw_blocking_put.h:269:21
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:184:18
                            // in function send_rsp called from snax_req_handler.cc:215:9
                            acc_snax_rsp_data_data_slice <= snax_req_handler_N_Mux_1_2_2_4_4_out1;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_acc_snax_rsp_valid
    // Sharing or Control mux
    // Sharing/Controlling 3 operation(s) on drive_acc_snax_rsp_valid
    // at: cynw_blocking_put.h:290:16
    // at: cynw_blocking_put.h:270:16
    // at: cynw_blocking_put.h:273:16
    
    always @(posedge clk)
      begin : drive_acc_snax_rsp_valid
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP7
            // at: cynw_blocking_put.h:290:16
            // Call Stack: 
            // in function reset_put called from snax_req_handler.cc:193:22
            acc_snax_rsp_valid <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd01: 
                      begin
                        if (snax_acc_req_valid) 
                          begin
                            // op:f_snax_req_handler/OP42
                            // at: cynw_blocking_put.h:270:16
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:184:18
                            // in function send_rsp called from snax_req_handler.cc:215:9
                            acc_snax_rsp_valid <= 1'd1;
                          end 
                      end
                    5'd02: 
                      begin
                        if (acc_snax_rsp_ready) 
                          begin
                            // op:f_snax_req_handler/OP48
                            // at: cynw_blocking_put.h:273:16
                            // Call Stack: 
                            // in function put called from snax_req_handler.cc:184:18
                            // in function send_rsp called from snax_req_handler.cc:215:9
                            acc_snax_rsp_valid <= 1'd0;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_snax_acc_req_ready
    // Sharing or Control mux
    // Sharing/Controlling 3 operation(s) on drive_snax_acc_req_ready
    // at: cynw_blocking_get.h:318:16
    // at: cynw_blocking_get.h:287:16
    // at: cynw_blocking_get.h:291:16
    
    always @(posedge clk)
      begin : drive_snax_acc_req_ready
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP6
            // at: cynw_blocking_get.h:318:16
            // Call Stack: 
            // in function reset_get called from snax_req_handler.cc:192:22
            snax_acc_req_ready <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd00, 5'd28: 
                      begin
                        // op:f_snax_req_handler/OP27
                        // at: cynw_blocking_get.h:287:16
                        // Call Stack: 
                        // in function get called from cynw_blocking_get.h:307:8
                        snax_acc_req_ready <= 1'd1;
                      end
                    5'd01: 
                      begin
                        if (snax_acc_req_valid) 
                          begin
                            // op:f_snax_req_handler/OP32
                            // at: cynw_blocking_get.h:291:16
                            // Call Stack: 
                            // in function get called from cynw_blocking_get.h:307:8
                            snax_acc_req_ready <= 1'd0;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_streamer_handler_master_out_last_read
    // Sharing or Control mux
    // Sharing/Controlling 11 operation(s) on drive_trig_hub_streamer_handler_master_out_last_read
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:853:7
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:938:13
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:853:23
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:899:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:939:2
    
    always @(posedge clk)
      begin : drive_trig_hub_streamer_handler_master_out_last_read
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP18
            // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:899:2
            // Call Stack: 
            // in function reset called from snax_req_handler.cc:200:42
            trig_hub_streamer_handler_master_out_last_read <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd06, 5'd10, 5'd12, 5'd14: 
                      begin
                        // op:f_snax_req_handler/OP113
                        // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:939:2
                        // Call Stack: 
                        // in function wait_done called from snax_req_handler.cc:154:42
                        // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                        trig_hub_streamer_handler_master_out_last_read <= trig_hub_streamer_handler_master_out_cur_write;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkv_handler_master_out_last_read
    // Sharing or Control mux
    // Sharing/Controlling 13 operation(s) on drive_trig_hub_qkv_handler_master_out_last_read
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:861:7
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:948:13
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:861:23
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:908:2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:949:2
    
    always @(posedge clk)
      begin : drive_trig_hub_qkv_handler_master_out_last_read
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP15
            // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:908:2
            // Call Stack: 
            // in function reset called from snax_req_handler.cc:199:37
            trig_hub_qkv_handler_master_out_last_read <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd04, 5'd08, 5'd15, 5'd21, 5'd27: 
                      begin
                        // op:f_snax_req_handler/OP101
                        // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:949:2
                        // Call Stack: 
                        // in function wait_done called from snax_req_handler.cc:152:37
                        // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                        trig_hub_qkv_handler_master_out_last_read <= trig_hub_qkv_handler_master_out_cur_write;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkt_handler_master_out_last_read
    // Sharing or Control mux
    // Sharing/Controlling 13 operation(s) on drive_trig_hub_qkt_handler_master_out_last_read
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:861:7
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:948:13
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:861:23
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:908:2
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:949:2
    
    always @(posedge clk)
      begin : drive_trig_hub_qkt_handler_master_out_last_read
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP12
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:908:2
            // Call Stack: 
            // in function reset called from snax_req_handler.cc:198:37
            trig_hub_qkt_handler_master_out_last_read <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd05, 5'd09, 5'd16, 5'd20, 5'd24: 
                      begin
                        // op:f_snax_req_handler/OP107
                        // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:949:2
                        // Call Stack: 
                        // in function wait_done called from snax_req_handler.cc:153:37
                        // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                        trig_hub_qkt_handler_master_out_last_read <= trig_hub_qkt_handler_master_out_cur_write;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_qkv_busy
    // Sharing or Control mux
    // Sharing/Controlling 18 operation(s) on drive_qkv_busy
    // at: snax_req_handler.cc:202:9
    // at: snax_req_handler.cc:81:9
    // at: snax_req_handler.cc:175:29
    // at: snax_req_handler.cc:61:9
    // at: snax_req_handler.cc:136:18
    // at: snax_req_handler.cc:105:9
    // at: snax_req_handler.cc:126:9
    // at: snax_req_handler.cc:156:9
    // at: snax_req_handler.cc:203:9
    // at: snax_req_handler.cc:82:9
    // at: snax_req_handler.cc:176:29
    // at: snax_req_handler.cc:62:9
    // at: snax_req_handler.cc:135:18
    // at: snax_req_handler.cc:104:9
    // at: snax_req_handler.cc:127:9
    // at: snax_req_handler.cc:157:9
    
    always @(posedge clk)
      begin : drive_qkv_busy
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP21
            // at: snax_req_handler.cc:202:9
            // Call Stack: 
            // in function f_snax_req_handler called from snax_req_handler.cc:202:9
            qkv_busy <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd02: 
                      begin
                        if (acc_snax_rsp_ready && !snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
                          begin
                            case (acc_snax_rsp_data_addr) 
                              32'd0000000001, 32'd0000000004: 
                                begin
                                end
                              32'd0000000002, 32'd0000000003: 
                                begin
                                  // op:f_snax_req_handler/OP118
                                  // at: snax_req_handler.cc:105:9
                                  // Call Stack: 
                                  // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                                  qkv_busy <= 1'd1;
                                end
                              default: 
                                begin
                                  if (snax_req_handler_Equal_1U_8_4_23_out1) 
                                    begin
                                      // op:f_snax_req_handler/OP58
                                      // at: snax_req_handler.cc:136:18
                                      // Call Stack: 
                                      // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                                      qkv_busy <= 1'd1;
                                    end 
                                end
                            endcase
                          end 
                      end
                    5'd06, 5'd10, 5'd16: 
                      begin
                        // op:f_snax_req_handler/OP114
                        // at: snax_req_handler.cc:156:9
                        // Call Stack: 
                        // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                        qkv_busy <= 1'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_streamer_busy
    // Sharing or Control mux
    // Sharing/Controlling 11 operation(s) on drive_streamer_busy
    // at: snax_req_handler.cc:204:9
    // at: snax_req_handler.cc:83:9
    // at: snax_req_handler.cc:174:34
    // at: snax_req_handler.cc:63:9
    // at: snax_req_handler.cc:90:9
    // at: snax_req_handler.cc:137:23
    // at: snax_req_handler.cc:106:9
    // at: snax_req_handler.cc:98:9
    // at: snax_req_handler.cc:128:9
    // at: snax_req_handler.cc:158:9
    
    always @(posedge clk)
      begin : drive_streamer_busy
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP23
            // at: snax_req_handler.cc:204:9
            // Call Stack: 
            // in function f_snax_req_handler called from snax_req_handler.cc:204:9
            streamer_busy <= 1'd0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd02: 
                      begin
                        if (acc_snax_rsp_ready && !snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
                          begin
                            case (acc_snax_rsp_data_addr) 
                              32'd0000000001: 
                                begin
                                end
                              32'd0000000002, 32'd0000000003, 32'd0000000004: 
                                begin
                                  // op:f_snax_req_handler/OP158
                                  // at: snax_req_handler.cc:90:9
                                  // Call Stack: 
                                  // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                                  streamer_busy <= 1'd1;
                                end
                              default: 
                                begin
                                  if (snax_req_handler_Equal_1U_8_4_23_out1) 
                                    begin
                                      // op:f_snax_req_handler/OP60
                                      // at: snax_req_handler.cc:137:23
                                      // Call Stack: 
                                      // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                                      streamer_busy <= 1'd1;
                                    end 
                                end
                            endcase
                          end 
                      end
                    5'd06, 5'd10, 5'd12, 5'd16: 
                      begin
                        // op:f_snax_req_handler/OP116
                        // at: snax_req_handler.cc:158:9
                        // Call Stack: 
                        // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                        streamer_busy <= 1'd0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_streamer_handler_master_data_in_0
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_streamer_handler_master_data_in_0
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:923:11
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:923:41
    always @*
      begin : drive_trig_hub_streamer_handler_master_data_in_0
        case (acc_snax_rsp_data_addr) 
          32'd0000000004: 
            begin
              // op:f_snax_req_handler/OP162
              // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:923:11
              // Call Stack: 
              // in function trig called from snax_req_handler.cc:93:42
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              trig_hub_streamer_handler_master_data_in_0 = 1'd1;
            end
          default: 
            begin
              // op:f_snax_req_handler/OP68
              // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:923:41
              // Call Stack: 
              // in function trig called from snax_req_handler.cc:142:42
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              trig_hub_streamer_handler_master_data_in_0 = 1'd0;
            end
        endcase
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_streamer_handler_master_data_in_1
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_streamer_handler_master_data_in_1
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:922:11
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:922:41
    always @*
      begin : drive_trig_hub_streamer_handler_master_data_in_1
        case (acc_snax_rsp_data_addr) 
          32'd0000000002: 
            begin
              // op:f_snax_req_handler/OP176
              // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:922:11
              // Call Stack: 
              // in function trig called from snax_req_handler.cc:67:42
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              trig_hub_streamer_handler_master_data_in_1 = 1'd1;
            end
          default: 
            begin
              // op:f_snax_req_handler/OP66
              // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:922:41
              // Call Stack: 
              // in function trig called from snax_req_handler.cc:142:42
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              trig_hub_streamer_handler_master_data_in_1 = 1'd0;
            end
        endcase
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_streamer_handler_master_data_in_2
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_streamer_handler_master_data_in_2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:921:11
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:921:41
    always @*
      begin : drive_trig_hub_streamer_handler_master_data_in_2
        case (acc_snax_rsp_data_addr) 
          32'd0000000002, 32'd0000000003, 32'd0000000004: 
            begin
              // op:f_snax_req_handler/OP160
              // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:921:11
              // Call Stack: 
              // in function trig called from snax_req_handler.cc:93:42
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              trig_hub_streamer_handler_master_data_in_2 = 1'd0;
            end
          default: 
            begin
              // op:f_snax_req_handler/OP64
              // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:921:41
              // Call Stack: 
              // in function trig called from snax_req_handler.cc:142:42
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              trig_hub_streamer_handler_master_data_in_2 = 1'd1;
            end
        endcase
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_streamer_handler_master_data_in_3
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_streamer_handler_master_data_in_3
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:920:11
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:920:41
    always @*
      begin : drive_trig_hub_streamer_handler_master_data_in_3
        case (acc_snax_rsp_data_addr) 
          32'd0000000003: 
            begin
              // op:f_snax_req_handler/OP132
              // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:920:11
              // Call Stack: 
              // in function trig called from snax_req_handler.cc:115:42
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              trig_hub_streamer_handler_master_data_in_3 = 1'd1;
            end
          default: 
            begin
              // op:f_snax_req_handler/OP62
              // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:920:41
              // Call Stack: 
              // in function trig called from snax_req_handler.cc:142:42
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              trig_hub_streamer_handler_master_data_in_3 = 1'd0;
            end
        endcase
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkv_handler_master_data_in_0
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkv_handler_master_data_in_0
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:933:41
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:933:11
    assign trig_hub_qkv_handler_master_data_in_0 = trig_hub_qkt_handler_master_data_in_0;
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkv_handler_master_data_in_1
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkv_handler_master_data_in_1
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:932:41
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:932:11
    assign trig_hub_qkv_handler_master_data_in_1 = trig_hub_qkt_handler_master_data_in_1;
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkv_handler_master_data_in_2
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkv_handler_master_data_in_2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:931:41
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:931:11
    assign trig_hub_qkv_handler_master_data_in_2 = trig_hub_qkt_handler_master_data_in_2;
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkv_handler_master_data_in_3
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkv_handler_master_data_in_3
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:930:41
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:930:11
    always @*
      begin : drive_trig_hub_qkv_handler_master_data_in_3
        if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
          begin
            // op:f_snax_req_handler/OP216
            // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:930:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:37:41
            // in function trig called from snax_req_handler.cc:19:41
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkv_handler_master_data_in_3 = snax_req_handler_Equal_1U_10_4_6_out1;
          end 
        else 
          begin
            // op:f_snax_req_handler/OP74
            // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:930:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:145:37
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkv_handler_master_data_in_3 = 1'd0;
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkv_handler_master_data_in_4
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkv_handler_master_data_in_4
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:929:41
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:929:11
    always @*
      begin : drive_trig_hub_qkv_handler_master_data_in_4
        if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
          begin
            // op:f_snax_req_handler/OP214
            // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:929:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:37:41
            // in function trig called from snax_req_handler.cc:19:41
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkv_handler_master_data_in_4 = snax_req_handler_NotEQ_1U_5_4_9_out1;
          end 
        else 
          begin
            // op:f_snax_req_handler/OP72
            // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:929:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:145:37
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkv_handler_master_data_in_4 = 1'd0;
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkt_handler_master_data_in_0
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkt_handler_master_data_in_0
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:933:41
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:933:11
    always @*
      begin : drive_trig_hub_qkt_handler_master_data_in_0
        if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
          begin
            // op:f_snax_req_handler/OP232
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:933:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:39:41
            // in function trig called from snax_req_handler.cc:28:41
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkt_handler_master_data_in_0 = 1'd0;
          end 
        else 
          begin
            case (acc_snax_rsp_data_addr) 
              32'd0000000003: 
                begin
                  // op:f_snax_req_handler/OP130
                  // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:933:11
                  // Call Stack: 
                  // in function trig called from snax_req_handler.cc:112:37
                  // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                  trig_hub_qkt_handler_master_data_in_0 = 1'd1;
                end
              default: 
                begin
                  // op:f_snax_req_handler/OP92
                  // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:933:41
                  // Call Stack: 
                  // in function trig called from snax_req_handler.cc:148:37
                  // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                  trig_hub_qkt_handler_master_data_in_0 = 1'd0;
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkt_handler_master_data_in_1
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkt_handler_master_data_in_1
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:932:41
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:932:11
    always @*
      begin : drive_trig_hub_qkt_handler_master_data_in_1
        if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
          begin
            // op:f_snax_req_handler/OP231
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:932:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:39:41
            // in function trig called from snax_req_handler.cc:28:41
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkt_handler_master_data_in_1 = 1'd0;
          end 
        else 
          begin
            case (acc_snax_rsp_data_addr) 
              32'd0000000002, 32'd0000000003: 
                begin
                  // op:f_snax_req_handler/OP129
                  // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:932:11
                  // Call Stack: 
                  // in function trig called from snax_req_handler.cc:112:37
                  // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                  trig_hub_qkt_handler_master_data_in_1 = 1'd0;
                end
              default: 
                begin
                  // op:f_snax_req_handler/OP90
                  // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:932:41
                  // Call Stack: 
                  // in function trig called from snax_req_handler.cc:148:37
                  // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                  trig_hub_qkt_handler_master_data_in_1 = 1'd1;
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkt_handler_master_data_in_2
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkt_handler_master_data_in_2
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:931:41
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:931:11
    always @*
      begin : drive_trig_hub_qkt_handler_master_data_in_2
        if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
          begin
            // op:f_snax_req_handler/OP230
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:931:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:39:41
            // in function trig called from snax_req_handler.cc:28:41
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkt_handler_master_data_in_2 = 1'd0;
          end 
        else 
          begin
            case (acc_snax_rsp_data_addr) 
              32'd0000000002: 
                begin
                  // op:f_snax_req_handler/OP187
                  // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:931:11
                  // Call Stack: 
                  // in function trig called from snax_req_handler.cc:73:37
                  // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                  trig_hub_qkt_handler_master_data_in_2 = 1'd1;
                end
              default: 
                begin
                  // op:f_snax_req_handler/OP88
                  // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:931:41
                  // Call Stack: 
                  // in function trig called from snax_req_handler.cc:148:37
                  // in function process_snax_acc_req called from snax_req_handler.cc:217:9
                  trig_hub_qkt_handler_master_data_in_2 = 1'd0;
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkt_handler_master_data_in_3
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkt_handler_master_data_in_3
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:930:41
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:930:11
    always @*
      begin : drive_trig_hub_qkt_handler_master_data_in_3
        if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
          begin
            // op:f_snax_req_handler/OP229
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:930:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:39:41
            // in function trig called from snax_req_handler.cc:28:41
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkt_handler_master_data_in_3 = snax_req_handler_Equal_1U_1_4_15_out1;
          end 
        else 
          begin
            // op:f_snax_req_handler/OP86
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:930:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:148:37
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkt_handler_master_data_in_3 = 1'd0;
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkt_handler_master_data_in_4
    // Sharing or Control mux
    // Sharing/Controlling 4 operation(s) on drive_trig_hub_qkt_handler_master_data_in_4
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:929:41
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:929:11
    always @*
      begin : drive_trig_hub_qkt_handler_master_data_in_4
        if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
          begin
            // op:f_snax_req_handler/OP227
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:929:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:39:41
            // in function trig called from snax_req_handler.cc:28:41
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkt_handler_master_data_in_4 = snax_req_handler_NotEQ_1U_12_4_13_out1;
          end 
        else 
          begin
            // op:f_snax_req_handler/OP84
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:929:41
            // Call Stack: 
            // in function trig called from snax_req_handler.cc:148:37
            // in function process_snax_acc_req called from snax_req_handler.cc:217:9
            trig_hub_qkt_handler_master_data_in_4 = 1'd0;
          end
      end
    
    // rtl_process:snax_req_handler/drive_stall0
    // Sharing or Control mux
    // Sharing/Controlling 20 operation(s) on drive_stall0
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:909:2
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:875:15
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:909:2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:875:15
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:900:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:867:15
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:935:2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:945:2
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:945:2
    always @*
      begin : drive_stall0
        case (global_state) 
          5'd04, 5'd08, 5'd15, 5'd21, 5'd27: 
            begin
              // op:f_snax_req_handler/OP100
              // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:945:2
              // Call Stack: 
              // in function wait_done called from snax_req_handler.cc:152:37
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              stall0 = snax_req_handler_Not_1U_1U_s_4_43_out1;
            end
          5'd05, 5'd09, 5'd16, 5'd20, 5'd24: 
            begin
              // op:f_snax_req_handler/OP106
              // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:945:2
              // Call Stack: 
              // in function wait_done called from snax_req_handler.cc:153:37
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              stall0 = snax_req_handler_Not_1U_1U_s_4_45_out1;
            end
          5'd06, 5'd10, 5'd12, 5'd14: 
            begin
              // op:f_snax_req_handler/OP112
              // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:935:2
              // Call Stack: 
              // in function wait_done called from snax_req_handler.cc:154:42
              // in function process_snax_acc_req called from snax_req_handler.cc:217:9
              stall0 = snax_req_handler_Not_1U_1U_s_4_39_out1;
            end
          default: 
            begin
              stall0 = 1'b0;
            end
        endcase
      end
    
    // rtl_process:snax_req_handler/drive_s_reg_14
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_s_reg_14
    // at: defines.h:94:22
    
    always @(posedge clk)
      begin : drive_s_reg_14
        if (rst == 1'b0) 
          begin
            s_reg_14 <= 32'd0000000000;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state) 
                    5'd01: 
                      begin
                        if (snax_acc_req_valid) 
                          begin
                            // op:f_snax_req_handler/OP31
                            // at: defines.h:94:22
                            // Call Stack: 
                            // in function operator= called from cynw_blocking_get.h:290:11
                            // in function get called from cynw_blocking_get.h:307:8
                            s_reg_14 <= snax_acc_req_data_data;
                          end 
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_instance:snax_req_handler/snax_req_handler_Equal_1U_3_4_1
    // Resource=snax_req_handler_Equal_1U_3_4, Function=eq : Inputs=32 Outputs=1
    // Implements 1 operation(s)
    // at: snax_req_handler.cc:215:18
    assign snax_req_handler_Equal_1U_3_4_1_out1 = snax_acc_req_data_addr == 32'd0000000001;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Or_1Ux1U_1U_4_2
    // Resource=snax_req_handler_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: snax_req_handler.cc:178:46
    assign snax_req_handler_Or_1Ux1U_1U_4_2_out1 = streamer_busy | qkv_busy;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Or_1Ux1U_1U_4_3
    // Resource=snax_req_handler_Or_1Ux1U_1U_4, Function=or : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: snax_req_handler.cc:178:61
    assign snax_req_handler_Or_1Ux1U_1U_4_3_out1 = snax_req_handler_Or_1Ux1U_1U_4_2_out1 | qkv_busy;
    
    // rtl_instance:snax_req_handler/snax_req_handler_N_Mux_1_2_2_4_4
    // Resource=snax_req_handler_N_Mux_1_2_2_4, Function=mux : Inputs=1,1 Outputs=1
    // Implements 1 operation(s)
    // at: snax_req_handler.cc:172:5
    always @*
      begin : snax_req_handler_N_Mux_1_2_2_4_4
        if (snax_req_handler_Equal_1U_3_4_1_out1) 
          begin
            snax_req_handler_N_Mux_1_2_2_4_4_out1 = snax_req_handler_Or_1Ux1U_1U_4_3_out1;
          end 
        else 
          begin
            snax_req_handler_N_Mux_1_2_2_4_4_out1 = 1'b0;
          end
      end
    
    // rtl_instance:snax_req_handler/snax_req_handler_N_Muxb_1_4_13_4_5
    // Resource=snax_req_handler_N_Muxb_1_4_13_4, Function=mux : Inputs=32 Outputs=1
    // Implements 1 operation(s)
    // at: defines.h:163:5
    always @*
      begin : snax_req_handler_N_Muxb_1_4_13_4_5
        case (acc_snax_rsp_data_addr) 
          32'd0000000006, 32'd0000000007, 32'd0000000008: 
            begin
              snax_req_handler_N_Muxb_1_4_13_4_5_out1 = 1'b1;
            end
          default: 
            begin
              snax_req_handler_N_Muxb_1_4_13_4_5_out1 = 1'b0;
            end
        endcase
      end
    
    // rtl_instance:snax_req_handler/snax_req_handler_Equal_1U_10_4_6
    // Resource=snax_req_handler_Equal_1U_10_4, Function=eq : Inputs=32 Outputs=1
    // Implements 3 operation(s)
    // at: snax_req_handler.cc:217:30
    assign snax_req_handler_Equal_1U_10_4_6_out1 = acc_snax_rsp_data_addr == 32'd0000000006;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Equal_1U_1_4_15
    // Resource=snax_req_handler_Equal_1U_1_4, Function=eq : Inputs=32 Outputs=1
    // Implements 3 operation(s)
    // at: snax_req_handler.cc:217:30
    assign snax_req_handler_Equal_1U_1_4_15_out1 = acc_snax_rsp_data_addr == 32'd0000000007;
    
    // rtl_instance:snax_req_handler/snax_req_handler_N_Mux_1_3_14_4_8
    // Resource=snax_req_handler_N_Mux_1_3_14_4, Function=mux : Inputs=32 Outputs=1
    // Implements 1 operation(s)
    // at: snax_req_handler.cc:17:9
    always @*
      begin : snax_req_handler_N_Mux_1_3_14_4_8
        case (acc_snax_rsp_data_addr) 
          32'd0000000006, 32'd0000000008: 
            begin
              snax_req_handler_N_Mux_1_3_14_4_8_out1 = 1'b1;
            end
          default: 
            begin
              snax_req_handler_N_Mux_1_3_14_4_8_out1 = 1'b0;
            end
        endcase
      end
    
    // rtl_instance:snax_req_handler/snax_req_handler_NotEQ_1U_5_4_9
    // Resource=snax_req_handler_NotEQ_1U_5_4, Function=ne : Inputs=32 Outputs=1
    // Implements 1 operation(s)
    // at: snax_req_handler.cc:217:30
    assign snax_req_handler_NotEQ_1U_5_4_9_out1 = acc_snax_rsp_data_addr != 32'd0000000006;
    
    // rtl_instance:snax_req_handler/snax_req_handler_N_Mux_1_3_15_4_12
    // Resource=snax_req_handler_N_Mux_1_3_15_4, Function=mux : Inputs=32 Outputs=1
    // Implements 1 operation(s)
    // at: snax_req_handler.cc:17:9
    always @*
      begin : snax_req_handler_N_Mux_1_3_15_4_12
        case (acc_snax_rsp_data_addr) 
          32'd0000000007, 32'd0000000008: 
            begin
              snax_req_handler_N_Mux_1_3_15_4_12_out1 = 1'b1;
            end
          default: 
            begin
              snax_req_handler_N_Mux_1_3_15_4_12_out1 = 1'b0;
            end
        endcase
      end
    
    // rtl_instance:snax_req_handler/snax_req_handler_NotEQ_1U_12_4_13
    // Resource=snax_req_handler_NotEQ_1U_12_4, Function=ne : Inputs=32 Outputs=1
    // Implements 1 operation(s)
    // at: snax_req_handler.cc:217:30
    assign snax_req_handler_NotEQ_1U_12_4_13_out1 = acc_snax_rsp_data_addr != 32'd0000000007;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Equal_1U_0_4_16
    // Resource=snax_req_handler_Equal_1U_0_4, Function=eq : Inputs=32 Outputs=1
    // Implements 2 operation(s)
    // at: snax_req_handler.cc:217:30
    assign snax_req_handler_Equal_1U_0_4_16_out1 = acc_snax_rsp_data_addr == 32'd0000000008;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Equal_1U_8_4_23
    // Resource=snax_req_handler_Equal_1U_8_4, Function=eq : Inputs=32 Outputs=1
    // Implements 20 operation(s)
    // at: snax_req_handler.cc:217:30
    assign snax_req_handler_Equal_1U_8_4_23_out1 = acc_snax_rsp_data_addr == 32'd0000000005;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Xor_1Ux1U_1U_4_38
    // Resource=snax_req_handler_Xor_1Ux1U_1U_4, Function=xor : Inputs=1,1 Outputs=1
    // Implements 4 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:938:34
    assign snax_req_handler_Xor_1Ux1U_1U_4_38_out1 = trig_hub_streamer_handler_master_out_last_read ^ trig_hub_streamer_handler_master_out_cur_write;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Not_1U_1U_s_4_39
    // Resource=snax_req_handler_Not_1U_1U_s_4, Function=not : Inputs=1 Outputs=1
    // Implements 4 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:935:2
    assign snax_req_handler_Not_1U_1U_s_4_39_out1 = !snax_req_handler_Xor_1Ux1U_1U_4_38_out1;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Xor_1Ux1U_1U_4_42
    // Resource=snax_req_handler_Xor_1Ux1U_1U_4, Function=xor : Inputs=1,1 Outputs=1
    // Implements 5 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:948:34
    assign snax_req_handler_Xor_1Ux1U_1U_4_42_out1 = trig_hub_qkv_handler_master_out_last_read ^ trig_hub_qkv_handler_master_out_cur_write;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Not_1U_1U_s_4_43
    // Resource=snax_req_handler_Not_1U_1U_s_4, Function=not : Inputs=1 Outputs=1
    // Implements 5 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:945:2
    assign snax_req_handler_Not_1U_1U_s_4_43_out1 = !snax_req_handler_Xor_1Ux1U_1U_4_42_out1;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Xor_1Ux1U_1U_4_44
    // Resource=snax_req_handler_Xor_1Ux1U_1U_4, Function=xor : Inputs=1,1 Outputs=1
    // Implements 5 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:948:34
    assign snax_req_handler_Xor_1Ux1U_1U_4_44_out1 = trig_hub_qkt_handler_master_out_last_read ^ trig_hub_qkt_handler_master_out_cur_write;
    
    // rtl_instance:snax_req_handler/snax_req_handler_Not_1U_1U_s_4_45
    // Resource=snax_req_handler_Not_1U_1U_s_4, Function=not : Inputs=1 Outputs=1
    // Implements 5 operation(s)
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:945:2
    assign snax_req_handler_Not_1U_1U_s_4_45_out1 = !snax_req_handler_Xor_1Ux1U_1U_4_44_out1;
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkt_handler_master_in_cur_write_reg
    // Sharing or Control mux
    // Sharing/Controlling 15 operation(s) on drive_trig_hub_qkt_handler_master_in_cur_write_reg
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:912:2
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:934:15
    // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:934:2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:912:2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:15
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:903:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:15
    
    always @(posedge clk)
      begin : drive_trig_hub_qkt_handler_master_in_cur_write_reg
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP14
            // at: trig_done_lib/c_parts/trig_hub_qkt_handler.h:912:2
            // Call Stack: 
            // in function reset called from snax_req_handler.cc:198:37
            trig_hub_qkt_handler_master_in_cur_write_reg <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  trig_hub_qkt_handler_master_in_cur_write_reg <= trig_hub_qkt_handler_master_in_cur_write;
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_qkv_handler_master_in_cur_write_reg
    // Sharing or Control mux
    // Sharing/Controlling 5 operation(s) on drive_trig_hub_qkv_handler_master_in_cur_write_reg
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:912:2
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:15
    // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:934:2
    
    always @(posedge clk)
      begin : drive_trig_hub_qkv_handler_master_in_cur_write_reg
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP17
            // at: trig_done_lib/c_parts/trig_hub_qkv_handler.h:912:2
            // Call Stack: 
            // in function reset called from snax_req_handler.cc:199:37
            trig_hub_qkv_handler_master_in_cur_write_reg <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  trig_hub_qkv_handler_master_in_cur_write_reg <= trig_hub_qkv_handler_master_in_cur_write;
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_trig_hub_streamer_handler_master_in_cur_write_reg
    // Sharing or Control mux
    // Sharing/Controlling 5 operation(s) on drive_trig_hub_streamer_handler_master_in_cur_write_reg
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:903:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:2
    // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:924:15
    
    always @(posedge clk)
      begin : drive_trig_hub_streamer_handler_master_in_cur_write_reg
        if (rst == 1'b0) 
          begin
            // op:f_snax_req_handler/OP20
            // at: trig_done_lib/c_parts/trig_hub_streamer_handler.h:903:2
            // Call Stack: 
            // in function reset called from snax_req_handler.cc:200:42
            trig_hub_streamer_handler_master_in_cur_write_reg <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  trig_hub_streamer_handler_master_in_cur_write_reg <= trig_hub_streamer_handler_master_in_cur_write;
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_global_state
    // FSM Control Mux
    // FSM Control for thread behavior:f_snax_req_handler
    // BB2 : PROTO_1
    //   SRCLOC: snax_req_handler.cc:206:9
    //    FSM: global_state == 0
    // BB5 : PROTO_2
    //   SRCLOC: cynw_blocking_get.h:289:10
    //    FSM: global_state == 1
    // BB9 : PROTO_3
    //   SRCLOC: cynw_blocking_put.h:272:10
    //    FSM: global_state == 2
    // BB30 : PROTO_14
    //   SRCLOC: snax_req_handler.cc:75:9
    //    FSM: global_state == 13
    // BB32 : PROTO_18
    //   SRCLOC: cynw_blocking_put.h:272:10
    //    FSM: global_state == 17
    // BB33 : PROTO_23
    //   SRCLOC: cynw_blocking_put.h:272:10
    //    FSM: global_state == 22
    // BB34 : PROTO_26
    //   SRCLOC: cynw_blocking_put.h:272:10
    //    FSM: global_state == 25
    // BB38 : PROTO_12
    //   SRCLOC: snax_req_handler.cc:95:9
    //    FSM: global_state == 11
    // BB50 : PROTO_8
    //   SRCLOC: snax_req_handler.cc:119:9
    //    FSM: global_state == 7
    // BB52 : PROTO_15
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_streamer_handler.h:937:3
    //    FSM: global_state == 14
    // BB55 : PROTO_24
    //   SRCLOC: snax_req_handler.cc:31:13
    //    FSM: global_state == 23
    // BB56 : PROTO_27
    //   SRCLOC: snax_req_handler.cc:22:13
    //    FSM: global_state == 26
    // BB59 : PROTO_4
    //   SRCLOC: snax_req_handler.cc:150:9
    //    FSM: global_state == 3
    // BB61 : PROTO_13
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_streamer_handler.h:937:3
    //    FSM: global_state == 12
    // BB64 : PROTO_19
    //   SRCLOC: cynw_blocking_put.h:272:10
    //    FSM: global_state == 18
    // BB70 : PROTO_9
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkv_handler.h:947:3
    //    FSM: global_state == 8
    // BB76 : PROTO_25
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkt_handler.h:947:3
    //    FSM: global_state == 24
    // BB77 : PROTO_28
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkv_handler.h:947:3
    //    FSM: global_state == 27
    // BB80 : PROTO_5
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkv_handler.h:947:3
    //    FSM: global_state == 4
    // BB83 : PROTO_16
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkv_handler.h:947:3
    //    FSM: global_state == 15
    // BB85 : PROTO_20
    //   SRCLOC: snax_req_handler.cc:44:13
    //    FSM: global_state == 19
    // BB101 : PROTO_10
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkt_handler.h:947:3
    //    FSM: global_state == 9
    // BB105 : PROTO_21
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkt_handler.h:947:3
    //    FSM: global_state == 20
    // BB110 : PROTO_6
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkt_handler.h:947:3
    //    FSM: global_state == 5
    // BB113 : PROTO_17
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkt_handler.h:947:3
    //    FSM: global_state == 16
    // BB131 : PROTO_11
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_streamer_handler.h:937:3
    //    FSM: global_state == 10
    // BB135 : PROTO_22
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_qkv_handler.h:947:3
    //    FSM: global_state == 21
    // BB140 : PROTO_7
    //   SRCLOC: trig_done_lib/c_parts/trig_hub_streamer_handler.h:937:3
    //    FSM: global_state == 6
    // BB158 : PROTO_29
    //   SRCLOC: snax_req_handler.cc:219:9
    //    FSM: global_state == 28
    
    always @(posedge clk)
      begin : drive_global_state
        if (rst == 1'b0) 
          begin
            // basic_block:trig_hub_qkt_handler_master_gen_in_next_write_1/BB6
            global_state <= 5'd00;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  global_state <= global_state_next;
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_global_state_next
    // FSM Control Mux
    // FSM Control for thread behavior:f_snax_req_handler
    always @*
      begin : drive_global_state_next
        case (global_state) 
          5'd00, 5'd28: 
            begin
              // basic_block:f_snax_req_handler/BB5
              global_state_next = 5'd01;
            end
          5'd01: 
            begin
              if (snax_acc_req_valid) 
                begin
                  global_state_next = global_state + 5'd01;
                end 
              else 
                begin
                  // basic_block:f_snax_req_handler/BB5
                  global_state_next = 5'd01;
                end
            end
          5'd02: 
            begin
              if (acc_snax_rsp_ready) 
                begin
                  if (snax_req_handler_N_Muxb_1_4_13_4_5_out1) 
                    begin
                      case (acc_snax_rsp_data_addr) 
                        32'd0000000006: 
                          begin
                            // basic_block:f_snax_req_handler/BB34
                            global_state_next = 5'd25;
                          end
                        32'd0000000007: 
                          begin
                            // basic_block:f_snax_req_handler/BB33
                            global_state_next = 5'd22;
                          end
                        32'd0000000008: 
                          begin
                            // basic_block:f_snax_req_handler/BB32
                            global_state_next = 5'd17;
                          end
                        default: 
                          begin
                            // basic_block:f_snax_req_handler/BB158
                            global_state_next = 5'd28;
                          end
                      endcase
                    end 
                  else 
                    begin
                      case (acc_snax_rsp_data_addr) 
                        32'd0000000002: 
                          begin
                            // basic_block:f_snax_req_handler/BB30
                            global_state_next = 5'd13;
                          end
                        32'd0000000003: 
                          begin
                            // basic_block:f_snax_req_handler/BB50
                            global_state_next = 5'd07;
                          end
                        32'd0000000004: 
                          begin
                            // basic_block:f_snax_req_handler/BB38
                            global_state_next = 5'd11;
                          end
                        32'd0000000005: 
                          begin
                            global_state_next = global_state + 5'd01;
                          end
                        default: 
                          begin
                            // basic_block:f_snax_req_handler/BB158
                            global_state_next = 5'd28;
                          end
                      endcase
                    end
                end 
              else 
                begin
                  // basic_block:f_snax_req_handler/BB9
                  global_state_next = 5'd02;
                end
            end
          5'd06, 5'd10, 5'd12, 5'd16, 5'd21, 5'd24, 5'd27: 
            begin
              // basic_block:f_snax_req_handler/BB158
              global_state_next = 5'd28;
            end
          5'd17: 
            begin
              if (alpha_CONV_out_QKV_ready) 
                begin
                  global_state_next = global_state + 5'd01;
                end 
              else 
                begin
                  // basic_block:f_snax_req_handler/BB32
                  global_state_next = 5'd17;
                end
            end
          5'd18: 
            begin
              if (alpha_CONV_out_QKT_ready) 
                begin
                  global_state_next = global_state + 5'd01;
                end 
              else 
                begin
                  // basic_block:f_snax_req_handler/BB64
                  global_state_next = 5'd18;
                end
            end
          5'd22: 
            begin
              if (alpha_QKT_out_ready) 
                begin
                  global_state_next = global_state + 5'd01;
                end 
              else 
                begin
                  // basic_block:f_snax_req_handler/BB33
                  global_state_next = 5'd22;
                end
            end
          5'd25: 
            begin
              if (alpha_QKV_out_ready) 
                begin
                  global_state_next = global_state + 5'd01;
                end 
              else 
                begin
                  // basic_block:f_snax_req_handler/BB34
                  global_state_next = 5'd25;
                end
            end
          default: 
            begin
              global_state_next = global_state + 5'd01;
            end
        endcase
      end
    
    // rtl_process:snax_req_handler/drive_gs_ctrl_f_snax_req_handler_h4
    // FSM Control Mux
    // FSM Control for thread behavior:f_snax_req_handler
    
    always @(posedge clk)
      begin : drive_gs_ctrl_f_snax_req_handler_h4
        if (rst == 1'b0) 
          begin
            gs_ctrl_f_snax_req_handler_h4 <= 1'b0;
          end 
        else 
          begin
            case (stall0) 
              1'b1: 
                begin
                end
              default: 
                begin
                  case (global_state_next) 
                    5'd02: 
                      begin
                        gs_ctrl_f_snax_req_handler_h4 <= 1'b1;
                      end
                    default: 
                      begin
                        gs_ctrl_f_snax_req_handler_h4 <= 1'b0;
                      end
                  endcase
                end
            endcase
          end
      end
    
    // rtl_process:snax_req_handler/drive_acc_snax_rsp_data_data
    // Sharing or Control mux
    // Sharing/Controlling 1 operation(s) on drive_acc_snax_rsp_data_data
    // at: cynw_blocking_put.h:269:21
    assign acc_snax_rsp_data_data = {31'b0000000000000000000000000000000, acc_snax_rsp_data_data_slice};

endmodule


